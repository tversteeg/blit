name: CI
on:
  push:
    paths-ignore:
      - "docs/**"
      - "**.md"

jobs:
  # Check for formatting
  rustfmt:
    name: Formatter check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: rustfmt
          override: true

      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  # Run test check on Linux, macOS, and Windows
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      # Checkout the branch being tested
      - uses: actions/checkout@v4

      # Install rust stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.event_name == 'push' }}

      # Install cargo-hack
      - uses: taiki-e/install-action@cargo-hack

      # Test all feature combinations on the target platform
      - name: Test
        run: cargo hack --feature-powerset test

  # Build the WASM target & push it to GitHub pages
  wasm:
    name: WASM test & build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Install rust stable
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.event_name == 'push' }}

      # Build the WASM
      - name: Build
        run: cargo run --package run-wasm -- --example showcase --release --build-only

      # Deploy to GitHub pages
      - name: Deploy to GitHub Pages
        uses: s0/git-publish-subdir-action@master
        env:
          REPO: self
          BRANCH: gh-pages
          FOLDER: target/wasm-examples
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  bench:
    name: Benchmarks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: moonrepo/setup-rust@v1
        with:
          channel: stable
          cache-target: release
          bins: cargo-codspeed

      # Cache the built dependencies
      - uses: Swatinem/rust-cache@v2.7.3
        with:
          save-if: ${{ github.event_name == 'push' }}

      - name: Build
        run: cargo codspeed build

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v2
        with:
          run: cargo codspeed run
          token: ${{ secrets.CODSPEED_TOKEN }}
